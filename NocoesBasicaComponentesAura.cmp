<!-- Noções básicas de component do Aura -->
<!-- Um exemplo de componente do Aura -->

<!-- Informa que é um componente do Aura -->
<aura:component> 
	<!-- É onde fica armazenado os dados no lado do cliente, como se fosse uma variável -->
	<aura:attribute name="expense" type="Expense__c" />
	<!-- Variável para eventos, uma forma de conseguir manipular os eventos de forma mais precisa, por exemplo: Quando ocorrer um click de um botão e chamar a função que dispara o evento debaixo, então ele saberia encontrar tal evento pelo seu name e através desse name é possível executar o evento que está declarado no type -->
	<aura:registerEvent name="updateExpense" type="c:expensesItemUpdate" />
	<!-- Esse é um card já formatado pelo Salesforce, para facilitar e padronizar o estilo dos componentes. Portante é muito recomendado utilizar esse lightning:card -->
	<lightning:card title="{!v.expense.Name}" iconName="standard:scan_card" class="{!v.expense.Reimbursed__c ? 'slds-theme_success' : ''}">

		<!-- Utilizado para padrões de layout, onde o valor do attribute determina a posição do conteúdo dentro de um elemento. Portante esse conteúdo demarcado pelo aura:set estará no footer do lightning:card -->
		<aura:set attribute="footer">
			<!-- Esse do lightning ele consegue formatar a hora e a data em um padrão escolhido por você, como não foi setado o atributo year, month, day. Então ele irá formatar no padrão UTC. Ele aceita alguns valores no atributo value e tenta transformar isso em DateTime -->
			<p>Date: <lightning:formattedDateTime value="{!v.formatdate}"/></p>
			<!-- Ele pega o valor e compara com a data Atual, retornando para nós a quantidade de dias, horas, semanas, anos, etc de diferença. -->
			<p class="slds-text-title"><lightning:relativeDateTime value="{!v.formatdate}"/></p>
		</aura:set>
		
		<p class="slds-text-heading_medium slds-p-horizontal_small">
				<!-- Aqui ele recebe um valor e tenta formatar tal valor em número, também é possível customizar como será mostrado esse número, style atribui o valor como moeda, portanto irá aparecer o $ ou R$-->
				Amount: <lightning:formattedNumber value="{!v.expense.Amount__c}" style="currency"/>
		</p>
		<p class="slds-p-horizontal_small">
			Client: {!v.expense.Client__c}
		</p>
		<p>
			<!-- Esse elemento é capaz de editar o registro associado ao component em questão de forma dinâmica, por tanto muito útil para ser utilizado com frequência -->
			<lightning:input type="toggle"
							 label="Reimbursed?"
							 name="reimbursed"
							 class="slds-p-around_small"
							 checked="{!v.expense.Reimbursed__c}"
							 messageToggleActive="Yes"
							 messageToggleInactive="No"
							 onchange="{!c.clickReimbursed}"/>
		</p>

	</lightning:card>

</aura:component>

<!-- Atributos e expressões -->
<aura:component>
	<!-- Forma de comunicação de componentes para componentes, esse atributo message é um dos aura:attribute que está dentro do helloMessage -->
	<c:helloMessage message="Você está linda hoje" />
</aura:component>

<!-- helloMessage.cmp -->
<aura:component>
	<aura:attribute name="message" type="String" />
	<p>Hello! {!v.message}</p>
</aura:component>

<!-- Another component que eu não faço ideia de qual seja. -->
<aura:component>
	<aura:attribute name="customMessage" type="String" />
	<p> <c:helloMessage message="{!v.customMessage}" /> </p>
</aura:component>

<aura:component>
	<aura:attribute name="expense" type="Expense__c"/>
	<p>
		Amount:
		<lightning:formattedNumber value="{!v.expense.Amount__c}" style="currency" />
	</p>
	<p>
		Client: {!v.expense.Client__c}
	</p>
	<p>
		<lightning:input type="toggle"
						 label="Reimbursed?"
						 name="reimbursed"
						 checked="{!v.expense.Reimbursed__c}" />
	</p>

</aura:component>

<!-- helloPlayground.cmp -->
<aura:component>
	<aura:attribute name="messages" type="List" 
		default="['You look nice today.', 'Great weather we\'re having.', 'How are you?']" />
	<h1>Hello Playground</h1>
	<p>Silly fun with attributes adn expressions.</p>
	<h2>List Items</h2>
	<p><c:helloMessage message="{!v.messages[0]}"/></p>
	<p><c:helloMessage message="{!v.messages[1]}"/></p>
	<p><c:helloMessage message="{!v.messages[2]}"/></p>
	<h2>List Iteration</h2>
	<aura:iteration items="{!v.messages}" var="msg">
		<p><c:helloMessage message="{!msg}" /></p>
	</aura:iteration>
	<h2>Conditional Expressions and Global Value Providers</h2>
	<aura:if isTrue="{!$Browser.isIPhone}">
		<p><c:helooMessage message="{!v.messages[0]}"/></p>
	<aura:set attribute="else">
		<p><c:helloMessage message="{!v.messages[1]}"/></p>
	</aura:set>
	</aura:if>
</aura:component>

<!-- Tratar de ações com controladores -->
<!-- Lidar com ações com controladores -->
<!-- helloMessageInteractive.cmp -->
<aura:component>
	<aura:attribute name="message" type="String"/>
	<p>Message of the day: {!v.message}</p>
	<div>
		<lightning:button label="You look nice today." onclick="{!c.handleClick}" />
		<lightning:button label="Today is going to be a great day!" onclick="{!c.hadnleClick}"/>
	</div>
</aura:component>

<!-- Inserir dados usando formulários -->
<!-- O contêiner do aplicativo expenses -->
<aura:application extends="force:slds">

</aura:application>

<!-- O componente de aplicativo expenses -->
<aura:component>
	<!-- PAGE HEADER -->
	<lightning:layout class="slds-page-header slds-page-header_object-home">
		<lightning:layoutItem>
			<lightning:icon iconName="standard:scan_card" alternativeText="My Expenses"/>
		</lightning:layoutItem>
		<lightning:layoutItem padding="horizontal-small">
			<div class="page-section page-header">
				<h1 class="slds-text-heading_label">Expenses</h1>
				<h1 class="slds-text-heading_medium">My Expenses</h1>
			</div>
		</lightning:layoutItem>
	</lightning:layout>
	<!-- / PAGE HEADER -->

	<!-- NEW EXPENSE FORM -->
	<lightning:layout>
		<lightning:layoutItem padding="around-small" size="6">
			<!-- [[ expense form goes here ]] -->
		</lightning:layoutItem>
	</lightning:layout>
	<!-- / NEW EXPENSE FORM -->
</aura:component>

<!-- O formulário de nova despesa -->
<!-- CREATE NEW EXPENSE -->
<div aria-labelledby="newexpenseform">
	<!-- BOXED AREA -->
	<fieldset class="slds-box slds-theme_default slds-container_small">
		<legend id="newexpenseform" class="slds-text-heading_small slds-p-vertical_medium">
			Add Expense
		</legend>
		<!-- CREATE NEW EXPENSE FORM -->
		<form class="slds-form_stacked">
			<lightning:input aura:id="expenseform" 
							 label="Expense Name"
							 name="expensename"
							 value="{!v.newExpense.Name}"
							 required="true" />
			<lightning:input type="number"
							 aura:id="expenseform"
							 label="Amount"
							 name="expenseamount"
							 min="0.1"
							 formatter="currency"
							 step="0.01"
							 value="{!v.newExpense.Amount__c}"
							 mewssageWhenRangeUnderflow="Enter an amount that's at least $0.10." />
			<lightning:input aura:id="expenseform"
							 label="Client"
							 name="expenseclient"
							 value="{!v.newExpense.Client__c}"
							 placeholder="ABC Co." />
			<lightning:input type="date"
							 aura:id="expenseform"
							 label="Expense Date"
							 name="expensedate"
							 value="{!v.newExpense.Date__c}" />
			<lightning:input type="checkbox" 
							 aura:id="expenseform"
							 label="Reimbursed?"
							 name="expreimbursed"
							 checked="{!v.newExpense.Reimbursed__c}" />
			<lightning:button label="Create Expense"
							  class="slds-m-top_medium"
							  variant="brand"
							  onclick="{!c.clickCreate}" />
		</form>
		<!-- / CREATE NEW EXPENSE FORM -->
	</fieldset>
	<!-- / BOXED AREA -->
</div>
<!-- / CREATE NEW EXPENSE -->


<!-- Atributos para Salesforce Objects (sObjects) -->
<aura:attribute name="newExpense" type="Expense__c"
	default="{
		'sobjectType': 'Expense__c',
		'Name': '',
		'Amount__c': 0,
		'Client__c': '',
		'Date__c': '',
		'Reimbursed__c': false
	}"/>

<!-- Tratar de evnios de formulários em um manipulador de ação -->


<!-- Criar a nova despesa -->
<aura:attribute name="expenses" type="Expense__c[]" />

<!-- ### A referência não é a coleção -->

<!-- ### Exibir a lista de despesas -->

<!-- ExpenseItem.cmp -->
<aura:component>
	<aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
	<aura:attribute name="formatdate" type="Date"/>
	<aura:attribute name="expense" type="Expense__c"/>
	<lightning:card title="{!v.expense.Name}" iconName="standard:scan_card" class="{!v.expense.Reimbursed__c ? 'slds-theme_success' : ''} ">
		<aura:set attribute="footer">
			<p>
				Date: <lightning:formattedDateTime value="{!v.formatdate}" />
			</p>
			<p class="slds-text-title">
				<lightning:relativeDateTime value="{!v.formatdate}" />
			</p>
		</aura:set>
		<p class="slds-text-heading_medium slds-p-horizontal_small">
			Amount: <ligntning:formattedNumber value="{!v.expense.Amount__c}" style="currency"/> 
		</p>
		<p class="slds-p-horizontal_small">
			Client: {!v.expense.Client__c}
		</p>
		<p>
			<lightning:input type="toggle" 
							 label="Reimbursed?"
							 name="reimbursed"
							 class="slds-p-around_small"
							 checked="{!v.expense.Reimbursed__c}"
							 messageToggleActive="Yes"
							 messageToggleInactive="No"
							 onchange="{!c.clickReimbursed}"/>
		</p>
	</lightning:card> 
</aura:component>


<!-- expenseList.cmp -->
<aura:component>
	<aura:attribute name="expenses" type="Expense_c[]" />
	<lightning:card title="Expense">
		<p class="slds-p-horizontal_small">
			<aura:iteration items="{!v.expenses}" var="expense">
				<c:expenseItem expense="{!expense}" />
			</aura:iteration>
		</p>
	</lightning:card>
</aura:component>

<!-- Desafio do Inserir dados usando formulários -->
<aura:component>
	<aura:attribute name="items" type="Camping_Item__c[]"/>
	<aura:attribute name="newItem" type="Camping_Item__c" default="{
		'Quantity__c' = 0,
		'Price__c' = 0
	}"/>
</aura:component>

<!-- ## Conectar ao Salesforce com os controladores do lado do servidor -->
<!-- ### Conceitos de controlador do lado do servidor 
	* Só informando como funciona a conexão de View, Controller.
	* Depois explicando como funciaon a conexão Model, View, Controller JS, Controller Apex
-->
<!-- ### Consultar dados no Salesforce -->
<!-- ### Carregar dados do Salesforce -->
<aura:component controller="ExpensesController">
	<aura:handler name="init" action="{c.doInit}" value="{!this}" />

</aura:component>

<!-- ### Chamar métodos do controlador do lado do servidor -->

<!-- ### Chamadas ao servidor, execução assíncrona e funções de retorno de chamada.  -->
<!-- ### Lidar com a resposta do servidor -->
<!-- ### Controladores do Apex para componentes do Aura -->

<!-- ### Salvar dados no Salesforce -->

<!-- ### Cuidados a se tomar -->
